<!DOCTYPE html>
<html lang="pt-br">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Calculadora</title>
    <style>
      body {
        font-family: "Arial", sans-serif;
        background-color: #f4f4f4;
        margin: 0;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        height: 100vh;
      }

      h1 {
        margin-bottom: 20px;
        color: #333;
      }

      form {
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        padding: 20px;
        text-align: center;
        margin-bottom: 20px;
      }

      label {
        display: block;
        margin-bottom: 10px;
        color: #333;
      }

      input {
        width: 100%;
        padding: 8px;
        margin-bottom: 16px;
        box-sizing: border-box;
      }

      button {
        background-color: #007bff;
        color: #fff;
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 16px;
      }

      button:hover {
        background-color: #0056b3;
      }

      #resultado {
        font-size: 18px;
        color: #333;
      }
    </style>
  </head>
  <body>
    <h1>Soma</h1>
    <form id="calculadoraForm" action="/CalcAsync" method="post">
      <label for="numero1">1° número:</label>
      <input type="number" name="num1" id="numero1" required />

      <label for="numero2">2° número:</label>
      <input type="number" name="num2" id="numero2" required />

      <button type="button" onclick="calcularSoma()">Calcular Soma</button>
    </form>

    <p id="resultado"></p>

    <script>
      async function calcularSoma() {
        const num1 = document.getElementById("numero1").value;
        const num2 = document.getElementById("numero2").value;

        // Enviar os dados para o servidor
        const response = await fetch("/calcularSoma", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            num1: num1,
            num2: num2,
          }),
        });

        if (!response.ok) {
          throw new Error(
            `Erro na resposta do servidor: ${response.statusText}`
          );
        }

        const data = await response.json();

        const resultadoElement = document.getElementById("resultado");
        resultadoElement.innerText = `Calculando...`;

        // Aguardar até que o status seja "done" ou ocorra um erro
        while (data.Status !== "done" && data.Status !== "error") {
          await new Promise((resolve) => setTimeout(resolve, 1000));

          // Fazer uma solicitação GET para obter o resultado
          console.log("Valor de data._id:", data._id);
          const getResultResponse = await fetch(
            `/getResult/${encodeURIComponent(data._id)}`,
            {
              method: "GET",
              headers: {
                "Content-Type": "application/json",
              },
            }
          );

          console.log("URL da solicitação:", `/getResult/${data._id}`);

          if (getResultResponse.ok) {
            const resultData = await getResultResponse.json();

            if (resultData.Status === "done") {
              resultadoElement.innerText = `Resultado: ${resultData.Result}`;
              break;
            }
          }
        }
      }
    </script>
  </body>
</html>
